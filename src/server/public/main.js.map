{"version":3,"sources":["./src/app/pages/photos/photos.page.html","./src/app/pages/photos/photos.page.ts","./src/app/components/posts-list/posts-list.component.html","./src/app/components/posts-list/posts-list.component.ts","./src/environments/environment.ts","./src/app/pages/posts/posts.page.html","./src/app/pages/posts/posts.page.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/signin/signin.page.ts","./src/app/pages/signin/signin.page.html","./src/app/pages/signup/signup.page.ts","./src/app/pages/signup/signup.page.html","./src/app/app.module.ts","./src/app/pages/home/home.page.html","./src/app/pages/home/home.page.ts","./src/app/services/auth.service.ts","./src/app/pages/users/users.page.html","./src/app/pages/users/users.page.ts","./src/app/services/facebook.service.ts","./src/app/components/users-list/users-list.component.html","./src/app/components/users-list/users-list.component.ts","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/components/photos-list/photos-list.component.html","./src/app/components/photos-list/photos-list.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<section>\n  <h2 class=\"section__name\">Photos</h2>\n  <mat-card>\n    <mat-card-content>\n      <app-photos-list\n        *ngIf=\"photos$ | async\"\n        [photos]=\"photos$ | async\"\n      ></app-photos-list>\n      <mat-spinner *ngIf=\"!(photos$ | async)\"></mat-spinner>\n    </mat-card-content>\n  </mat-card>\n</section>\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { FacebookService } from '../../services/facebook.service';\n\n@Component({\n  selector: 'app-photos',\n  templateUrl: './photos.page.html',\n})\nexport class PhotosPage {\n  photos$: Observable<any>;\n\n  constructor(private facebookService: FacebookService) { }\n\n  ngOnInit() {\n    this.photos$ = this.facebookService.getPhotos();\n  }\n}\n","<mat-list>\n  <mat-grid-list cols=\"3\" rowHeight=\"2:3\">\n    <mat-grid-tile *ngFor=\"let post of posts\">\n      <mat-card class=\"example-card\">\n        <mat-card-header>\n          <mat-card-title>{{ post?.title }}</mat-card-title>\n          <mat-card-subtitle>{{ post?.type }}</mat-card-subtitle>\n        </mat-card-header>\n        <img mat-card-image height=\"300\" [src]=\"post?.media?.image?.src\" />\n        <mat-card-content>\n          <p>\n            {{ post?.description }}\n          </p>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</mat-list>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-posts-list',\n  templateUrl: './posts-list.component.html',\n})\nexport class PostsListComponent {\n  @Input() posts: any[];\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://js-shouts-zemoga.herokuapp.com/',\n  cookieName: 'jsshouts.session'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<section>\n  <h2 class=\"section__name\">Posts</h2>\n  <mat-card>\n    <mat-card-content>\n      <app-posts-list\n        *ngIf=\"posts$ | async\"\n        [posts]=\"posts$ | async\"\n      ></app-posts-list>\n      <mat-spinner *ngIf=\"!(posts$ | async)\"></mat-spinner>\n    </mat-card-content>\n  </mat-card>\n</section>\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { FacebookService } from '../../services/facebook.service';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.page.html',\n})\nexport class PostsPage {\n  posts$: Observable<any>;\n\n  constructor(private facebookService: FacebookService) { }\n\n  ngOnInit() {\n    this.posts$ = this.facebookService.getPosts();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../environments/environment';\nimport { IUser } from './models/user';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Zemoga JsShoutouts';\n  user: IUser;\n  isAuthenticated$: Observable<boolean>;\n  localAuth: boolean;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.getUser().subscribe();\n    this.authService.user$.subscribe(user => this.user = user);\n    this.authService.localAuthentication$.subscribe(localAuth => this.localAuth = localAuth);\n    this.isAuthenticated$ = this.authService.isAuthenticated$;\n  }\n\n  signIn() {\n    window.location.href = `${environment.apiUrl}facebook`;\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <a [routerLink]=\"['/']\" mat-icon-button>\n    <mat-icon>menu</mat-icon>\n  </a>\n  <span class=\"spacer\"></span>\n  <a\n    *ngIf=\"(isAuthenticated$ | async) && !localAuth\"\n    [routerLink]=\"['/photos']\"\n    mat-button\n    class=\"nav-button\"\n  >\n    Photos\n  </a>\n  <a\n    *ngIf=\"(isAuthenticated$ | async) && !localAuth\"\n    [routerLink]=\"['/posts']\"\n    mat-button\n    class=\"nav-button\"\n  >\n    Posts\n  </a>\n  <a\n    *ngIf=\"isAuthenticated$ | async\"\n    [routerLink]=\"['/users']\"\n    mat-button\n    class=\"nav-button\"\n  >\n    Users\n  </a>\n  <a\n    *ngIf=\"!(isAuthenticated$ | async)\"\n    [routerLink]=\"['/signup']\"\n    mat-button\n    class=\"nav-button\"\n  >\n    Sign Up\n  </a>\n  <button\n    *ngIf=\"!(isAuthenticated$ | async)\"\n    [routerLink]=\"['/signin']\"\n    mat-button\n    class=\"nav-button\"\n  >\n    Local Log In\n  </button>\n  <button\n    *ngIf=\"!(isAuthenticated$ | async)\"\n    mat-button\n    class=\"nav-button\"\n    (click)=\"signIn()\"\n  >\n    Log In With Facebook\n  </button>\n  <span *ngIf=\"isAuthenticated$ | async\"> Hi, {{ user?.name }} </span>\n  <button\n    *ngIf=\"isAuthenticated$ | async\"\n    mat-button\n    class=\"nav-button\"\n    (click)=\"logout()\"\n  >\n    Log out\n  </button>\n</mat-toolbar>\n\n<div style=\"background-color: rgb(0, 0, 0); height: 290px\">\n  <div\n    class=\"bg-image-container__image\"\n    style=\"background-image: url('assets/background.jpg'); opacity: 1\"\n  >\n<img class=\"logo\"src=\"../assets/logo.png\" alt=\"Zemoga JsShouts\"></div>\n</div>\n\n<div class=\"main\">\n  <router-outlet></router-outlet>\n</div>\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\n\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.page.html'\n})\nexport class SigninPage {\n  form: FormGroup;\n  loginInvalid = false;\n  formSubmitAttempt = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {\n    this.form = this.fb.group({\n      email: ['', Validators.email],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit() {\n    this.loginInvalid = false;\n    this.formSubmitAttempt = false;\n    if (this.form.valid) {\n      try {\n        const username = this.form.get('email')?.value;\n        const password = this.form.get('password')?.value;\n        this.authService.signin(username, password)\n          .pipe(tap(_ => this.router.navigate(['/'])))\n          .subscribe();\n      } catch (err) {\n        this.loginInvalid = true;\n      }\n    } else {\n      this.formSubmitAttempt = true;\n    }\n  }\n}\n","<mat-card>\n  <mat-card-title>\n    <h2 class=\"header-title\">Sign In</h2>\n  </mat-card-title>\n  <mat-card-content>\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <mat-card-content>\n        <mat-error *ngIf=\"loginInvalid\">\n          The email and password were not recognized\n        </mat-error>\n        <p>\n          <mat-form-field class=\"full-width-input\">\n            <input\n              matInput\n              placeholder=\"Email\"\n              formControlName=\"email\"\n              required\n            />\n            <mat-error> Please provide a valid email address </mat-error>\n          </mat-form-field>\n        </p>\n        <p>\n          <mat-form-field class=\"full-width-input\">\n            <input\n              matInput\n              type=\"password\"\n              placeholder=\"Password\"\n              formControlName=\"password\"\n              required\n            />\n            <mat-error> Please provide a valid password </mat-error>\n          </mat-form-field>\n        </p>\n      </mat-card-content>\n      <mat-card-actions>\n        <button mat-raised-button color=\"primary\">Login</button>\n      </mat-card-actions>\n    </form>\n  </mat-card-content>\n</mat-card>\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\n\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n})\nexport class SignupPage {\n  form: FormGroup;\n  loginInvalid = false;\n  formSubmitAttempt = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {\n    this.form = this.fb.group({\n      email: ['', Validators.email],\n      password: ['', Validators.required],\n      name: ['']\n    });\n  }\n\n  onSubmit() {\n    this.loginInvalid = false;\n    this.formSubmitAttempt = false;\n    if (this.form.valid) {\n      try {\n        const username = this.form.get('email')?.value;\n        const password = this.form.get('password')?.value;\n        const name = this.form.get('name')?.value;\n        this.authService.signup(username, password, name)\n          .pipe(tap(_ => this.router.navigate(['/'])))\n          .subscribe();\n      } catch (err) {\n        this.loginInvalid = true;\n      }\n    } else {\n      this.formSubmitAttempt = true;\n    }\n  }\n}\n","<mat-card>\n  <mat-card-title>\n    <h2 class=\"header-title\">Sign Up</h2>\n  </mat-card-title>\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <mat-card-content>\n      <mat-error *ngIf=\"loginInvalid\">\n        The email and password were not recognized\n      </mat-error>\n      <p>\n        <mat-form-field class=\"full-width-input\">\n          <input\n            matInput\n            placeholder=\"Email\"\n            formControlName=\"email\"\n            required\n          />\n          <mat-error> Please provide a valid email address </mat-error>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field class=\"full-width-input\">\n          <input\n            matInput\n            type=\"password\"\n            placeholder=\"Password\"\n            formControlName=\"password\"\n            required\n          />\n          <mat-error> Please provide a valid password </mat-error>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field class=\"full-width-input\">\n          <input matInput placeholder=\"Name\" formControlName=\"name\" required />\n          <mat-error> Please provide a valid name </mat-error>\n        </mat-form-field>\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\">Login now</button>\n    </mat-card-actions>\n  </form>\n</mat-card>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\nimport { AuthService } from './services/auth.service';\nimport { SignupPage } from './pages/signup/signup.page';\nimport { HomePage } from './pages/home/home.page';\nimport { SigninPage } from './pages/signin/signin.page';\nimport { UsersListComponent } from './components/users-list/users-list.component';\nimport { PostsPage } from './pages/posts/posts.page';\nimport { FacebookService } from './services/facebook.service';\nimport { PostsListComponent } from './components/posts-list/posts-list.component';\nimport { PhotosListComponent } from './components/photos-list/photos-list.component';\nimport { PhotosPage } from './pages/photos/photos.page';\nimport { UsersPage } from './pages/users/users.page';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupPage,\n    HomePage,\n    SigninPage,\n    UsersListComponent,\n    PostsPage,\n    PostsListComponent,\n    PhotosPage,\n    PhotosListComponent,\n    UsersPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MaterialModule\n  ],\n  providers: [AuthService, FacebookService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\n<section>\n  <h2 class=\"section__name\">Home</h2>\n  <mat-card>\n    <mat-card-content>\n      <span [style.marginTop.px]=\"50\" *ngIf=\"isAuthenticated$ | async\">\n        You are authenticated. Welcome!\n      </span>\n\n      <h2>Something interesting should be here!</h2>\n    </mat-card-content>\n  </mat-card>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n})\nexport class HomePage implements OnInit {\n  isAuthenticated$: Observable<boolean>;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.isAuthenticated$ = this.authService.isAuthenticated$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap, map } from 'rxjs/operators';\nimport { Subject, Observable } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { IUser } from '../models/user';\nimport { ILocalAuth } from '../models/local-auth';\n\n@Injectable()\nexport class AuthService {\n  _user$ = new Subject<IUser>();\n  _localAuthentication$ = new Subject<boolean>();\n\n  get isAuthenticated$(): Observable<boolean> {\n    return this._user$.asObservable().pipe(map(user => !!user));\n  }\n\n  get localAuthentication$(): Observable<boolean> {\n    return this._localAuthentication$.asObservable().pipe(map(user => user));\n  }\n\n  get user$(): Observable<IUser> {\n    return this._user$.asObservable();\n  }\n\n  constructor(private http: HttpClient) { }\n\n  getUser() {\n    return this.http.get(\n      `${environment.apiUrl}profile`,\n      {\n        withCredentials: true,\n        headers: {\n          authorization: `Bearer ${this.getJwtToken()}`\n        }\n      })\n      .pipe(tap((user: IUser) => this._user$.next(user)));\n  }\n\n  getUsers() {\n    return this.http.get(\n      `${environment.apiUrl}user`,\n      {\n        withCredentials: true,\n        headers: {\n          authorization: `Bearer ${this.getJwtToken()}`\n        }\n      }\n    );\n  }\n\n  signup(email, password, name) {\n    return this.http.post(\n      `${environment.apiUrl}local-auth/signup`,\n      { email, password, name }\n    ).pipe(tap(({ token, user }: ILocalAuth) => {\n      this.setJwtToken(token);\n      this._user$.next(user);\n      this._localAuthentication$.next(true);\n    }));\n  }\n\n  signin(email, password) {\n    return this.http.post(\n      `${environment.apiUrl}local-auth`,\n      { email, password }\n    ).pipe(tap(({ token, user }: ILocalAuth) => {\n      this.setJwtToken(token);\n      this._user$.next(user);\n      this._localAuthentication$.next(true);\n    }));\n  }\n\n  setJwtToken(token) {\n    localStorage.setItem('jwt.token', token);\n  }\n\n  getJwtToken() {\n    return localStorage.getItem('jwt.token');\n  }\n\n  logout() {\n    localStorage.removeItem('jwt.token');\n    window.location.href = `${environment.apiUrl}logout`;\n  }\n}\n","<section>\n  <h2 class=\"section__name\">Users</h2>\n  <mat-card>\n    <mat-card-content>\n      <app-users-list\n        *ngIf=\"users$ | async\"\n        [users]=\"users$ | async\"\n      ></app-users-list>\n      <mat-spinner *ngIf=\"!(users$ | async)\"></mat-spinner>\n    </mat-card-content>\n  </mat-card>\n</section>","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.page.html',\n})\nexport class UsersPage {\n  users$: Observable<any>;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.users$ = this.authService.getUsers();\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class FacebookService {\n  constructor(private http: HttpClient) { }\n\n  getPosts() {\n    return this.http.get(\n      `${environment.apiUrl}me/posts`,\n      {\n        withCredentials: true,\n      })\n      .pipe(map(({ posts }: any) => {\n        const { data } = posts;\n        return data.map(result => result.attachments?.data[0]);\n      }));\n  }\n\n  getPhotos() {\n    return this.http.get(\n      `${environment.apiUrl}me/photos`,\n      {\n        withCredentials: true,\n      })\n      .pipe(map(({ photos }: any) => {\n        const { data } = photos;\n        return data;\n      }));\n  }\n\n  getProfile() {\n    return this.http.get(\n      `${environment.apiUrl}me`,\n      {\n        withCredentials: true,\n      });\n  }\n}\n","<mat-list>\n  <mat-list-item *ngFor=\"let user of users\">\n    {{ user?.name }}\n  </mat-list-item>\n</mat-list>\n","import { Component, Input } from '@angular/core';\n\nimport { IUser } from '../../models/user';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n})\nexport class UsersListComponent {\n  @Input() users: IUser[];\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomePage } from './pages/home/home.page';\nimport { PhotosPage } from './pages/photos/photos.page';\nimport { PostsPage } from './pages/posts/posts.page';\nimport { SigninPage } from './pages/signin/signin.page';\nimport { SignupPage } from './pages/signup/signup.page';\nimport { UsersPage } from './pages/users/users.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  },\n  {\n    path: 'signup',\n    component: SignupPage,\n  },\n  {\n    path: 'signin',\n    component: SigninPage,\n  },\n  {\n    path: 'posts',\n    component: PostsPage,\n  },\n  {\n    path: 'photos',\n    component: PhotosPage,\n  },\n  {\n    path: 'users',\n    component: UsersPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n\n@NgModule({\n  exports: [\n    MatToolbarModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatGridListModule,\n    MatProgressSpinnerModule\n  ],\n})\nexport class MaterialModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","<mat-list>\n  <mat-grid-list cols=\"3\" rowHeight=\"1:1\">\n    <mat-grid-tile *ngFor=\"let photo of photos\">\n      <mat-card class=\"example-card\">\n        <img mat-card-image [src]=\"photo?.picture\" />\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</mat-list>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-photos-list',\n  templateUrl: './photos-list.component.html',\n})\nexport class PhotosListComponent {\n  @Input() photos: any[];\n}\n"],"sourceRoot":"webpack:///"}